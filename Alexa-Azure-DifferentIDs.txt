using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.Azure.WebJobs.Host;
using System;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Microsoft.Azure.Documents;
using Microsoft.Azure.Documents.Client;
using System.Linq;

namespace FunctionApp
{
    public static class AddFunction
    {
        [FunctionName("AddFunction")]
        public static async Task<HttpResponseMessage> Run([HttpTrigger(AuthorizationLevel.Anonymous, "get", "post", Route = null)]HttpRequestMessage req, TraceWriter log)
        {
            // Simple Function
            // Get request body
            dynamic data = await req.Content.ReadAsAsync<object>();
            log.Info($"Content={data}");
            if (data.request.type == "LaunchRequest")
            {
                // default launch request, let's just let them know what you can do
                log.Info($"Default LaunchRequest made");
                return DefaultRequest(req);
            }
            else if (data.request.type == "IntentRequest")
            {
                // Set name to query string or body data
                string intentName = data.request.intent.name;
                log.Info($"intentName={intentName}");
                DocumentClient client = new DocumentClient(new Uri("https://alexa.documents.azure.com:443/"),
                    "xxx==");

                IQueryable<Document> values = client.CreateDocumentQuery<Document>(UriFactory.CreateDocumentCollectionUri("myDb", "myCollection"), "SELECT * FROM c");

                Document latest = new Document();
                Document latest1 = new Document();

                foreach (var y in values)
                {
                    if (y.GetPropertyValue<float>("ToolId") == 0)
                    {
                        latest1 = y;
                    }

                }
                foreach (var x in values)
                {
                    if (x.GetPropertyValue<float>("ToolId") == 1)
                    {
                        latest = x;
                    }
                }
                switch (intentName)
                {
                    case "AMAZON.HelpIntent":


                        string ab1 = "How may i help you";
                        string resultab1 = ab1;
                        string subjectab1 = resultab1.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"{resultab1.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"{resultab1.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });
                    case "AMAZON.CancelIntent":

                        string ab = "Goodbye!";
                        string resultab = ab;
                        string subjectab = resultab.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"{resultab.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"{resultab.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });
                    case "AMAZON.StopIntent":

                        string ab2 = "Goodbye!";
                        string resultab2 = ab2;
                        string subjectab2 = resultab2.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"{resultab2.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"{resultab2.ToString()}."
                                },
                                shouldEndSession = true
                            }
                        });
                    case "AIntent":


                        string abc = "I didn't get you. Please try again."; 
                        string resultabc = abc;
                        string subjectabc = resultabc.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"{resultabc.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"{resultabc.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intenta":

                        var a = latest.GetPropertyValue<float>("ActiveHeatingTime").ToString();
                        string resulta = a ;
                        string subjecta = resulta.ToString() ;
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { } ,
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resulta.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resulta.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentb":
                        
                        var b = latest.GetPropertyValue<float>("CycleTime").ToString();
                        string resultb = b;
                        string subjectb = resultb.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultb.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultb.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "IntentbB":

                        var b1 = latest1.GetPropertyValue<float>("CycleTime").ToString();
                        string resultb1 = b1;
                        string subjectb1 = resultb1.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultb1.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultb1.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentc":
                       
                        var c = latest.GetPropertyValue<String>("ActiveAxes").ToString();
                        string resultc = c;
                        string subjectc = resultc.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultc.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultc.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentd":
                        
                        var d = latest.GetPropertyValue<float>("ActiveEnergyValue").ToString();
                        string resultd = d;
                        string subjectd = resultd.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultd.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultd.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intente":
                        
                        var e = latest.GetPropertyValue<float>("BadJob").ToString();
                        string resulte = e;
                        string subjecte = resulte.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resulte.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resulte.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentf":
                        
                        var f = latest.GetPropertyValue<String>("Bloch").ToString();
                        string resultf = f;
                        string subjectf = resultf.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultf.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultf.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentg":
                        
                        var g = latest.GetPropertyValue<float>("ToolId").ToString();
                        string resultg = g;
                        string subjectg = resultg.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultg.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultg.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intenth":
                        
                        var h = latest.GetPropertyValue<float>("CumulativeJobs").ToString();
                        string resulth = h;
                        string subjecth = resulth.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resulth.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resulth.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intenti":
                        
                        var i = latest.GetPropertyValue<float>("Fovr").ToString();
                        string resulti = i;
                        string subjecti = resulti.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resulti.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resulti.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentj":
                        
                        var j = latest.GetPropertyValue<float>("Frequency").ToString();
                        string resultj = j;
                        string subjectj = resultj.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultj.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultj.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentk":
                       
                        var k = latest.GetPropertyValue<float>("GoodJob").ToString();
                        string resultk = k;
                        string subjectk = resultk.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultk.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultk.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentl":
                        
                        var l = latest.GetPropertyValue<float>("LeftSideJobTemperature").ToString();
                        string resultl = l;
                        string subject2 = resultl.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultl.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultl.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentm":
                       
                        var m = latest.GetPropertyValue<float>("Line").ToString();
                        string resultm = m;
                        string subjectm = resultm.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultm.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultm.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentn":
                        
                        var n = latest.GetPropertyValue<float>("PartCount").ToString();
                        string resultn = n;
                        string subjectn = resultn.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultn.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure Simple Calculator",
                                    content = $"The result is {resultn.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intento":
                        
                        var o = latest.GetPropertyValue<float>("PathFederate").ToString();
                        string resulto = o;
                        string subjecto = resulto.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resulto.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resulto.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentp":
                        
                        var p = latest.GetPropertyValue<float>("Program").ToString();
                        string resultp = p;
                        string subjectp = resultp.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultp.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultp.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentq":
                        
                        var q = latest.GetPropertyValue<float>("RightSideJobTemperature").ToString();
                        string resultq = q;
                        string subjectq = resultq.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultq.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultq.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentr":
                       
                        var r = latest.GetPropertyValue<float>("SspeedOvr").ToString();
                        string resultr = r;
                        string subjectr = resultr.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultr.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultr.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intents":
                        
                        var s = latest.GetPropertyValue<float>("TotalJob").ToString();
                        string results = s;
                        string subjects = results.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {results.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {results.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentt":
                        
                        var t = latest.GetPropertyValue<float>("Voltage").ToString();
                        string resultt = t;
                        string subjectt = resultt.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultt.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultt.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "Intentu":
                        
                        var u = latest.GetPropertyValue<String>("Mode").ToString();
                        string resultu = u;
                        string subjectu = resultu.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultu.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultu.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });
                        
                    case "Intentw":
                        
                        var w = latest.GetPropertyValue<String>("ProgramComment").ToString();
                        string resultw = w;
                        string subjectw = resultw.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultw.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resultw.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "IntentaA":
                        
                        var a1 = latest1.GetPropertyValue<float>("ActiveHeatingTime").ToString();
                        string resulta1 = a1;
                        string subjecta1 = resulta1.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resulta1.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure",
                                    content = $"The result is {resulta1.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    case "IntentnN":
                        
                        var n1 = latest1.GetPropertyValue<float>("PartCount").ToString();
                        string resultn1 = n1;
                        string subjectn1 = resultn1.ToString();
                        return req.CreateResponse(HttpStatusCode.OK, new
                        {
                            version = "1.0",
                            sessionAttributes = new { },
                            response = new
                            {
                                outputSpeech = new
                                {
                                    type = "PlainText",
                                    text = $"The result is {resultn1.ToString()}."
                                },
                                card = new
                                {
                                    type = "Simple",
                                    title = "Alexa-Azure Simple Calculator",
                                    content = $"The result is {resultn1.ToString()}."
                                },
                                shouldEndSession = false
                            }
                        });

                    // Add more intents and default responses
                    default:
                        return DefaultRequest(req);
                }
            }
                   else
                   {
                        return DefaultRequest(req);
                   }
        }
        private static HttpResponseMessage DefaultRequest(HttpRequestMessage req)
        {
            return req.CreateResponse(HttpStatusCode.OK, new
            {
                version = "1.0",
                sessionAttributes = new { },
                response = new
                {
                    outputSpeech = new
                    {
                        type = "PlainText",
                        text = "Welcome to the database of xxx technologies. How may I help you"
                    },
                    card = new
                    {
                        type = "Simple",
                        title = "Alexa-Azure",
                        content = "Welcome to the database of xxx technologies. How may I help you"
                    },
                    shouldEndSession = false
                }
            });
        }
    }
}